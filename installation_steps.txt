- steps to configure a new project in github
	- add to .gitignore
		*.class
		*.jar
		*.war
		*.ear
		*.zip
		*.tar.gz
		*.rar
		hs_err_pid*
		/target/
		.metadata
		bin/
		tmp/
		*.tmp
		*.bak
		*.swp
		local.properties
		.settings/
		.project
		.classpath
    - .classpath and .project should never be added to repository - they should be calculated every time by eclipse

- eclipse installation steps
    - install JBoss EAP 7.1.0 Beta
        - https://developers.redhat.com/products/eap/download/
        - add ManagementUser by running add-user.bat
    - install eclipse oxygen
        - eclipse marketplace: Eclipse Class Decompiler
        - eclipse marketplace: JBoss Tools
        - Create a New Red Hat JBoss Enterprise Application Platform 7.1

- how to import project from github
    - Right mouse click on Project Explorer/Import/Git/Projects from Git
    - Clone URI
    - URI: https://github.com/mskaryszewski/kids-gym-server
        - always full project path, not specific branch, choosing a branch will come in next step
    - Local Destination: define workspace location
    - eclipse clean build eclipse:clean eclipse:eclipse
    - import existing projects into workspace

- How to create a multimodule maven project
    - create parent project
        - type of packaging: pom
    - create child modules
        - right click on parent project - new maven module
        - packaging: jar
    - ejb module
        - create it as a normal maven module
        - you don't need to convert it to facet form
            - if you don't convert it, you just won't be able to create a new EJB using eclipse wizard and deploy it directly on application server, but you can create EJB yourself manually
    - create ear application module
        - right click on parent project - new maven module
        - packaging: ear
        - add dependencies from other modules

- how to add new datasource and use it by hibernate - example for derbyDB
    - good description:
        http://www.hameister.org/JBoss_DatasourceDerby.html
        http://docs.kony.com/konylibrary/messaging/kms_console_installer_manual_guide-linux/Content/Configure_JBoss1.htm
    - deploy a driver that datasource will be using as jboss module
        - create directory <JBOSS_HOME>\modules\system\layers\base\org\apache\derby\main
        - create file module.xm;
            <?xml version="1.0" encoding="UTF-8"?>
            <module xmlns="urn:jboss:module:1.0" name="org.apache.derby">
                <resources>
                    <resource-root path="derbyclient.jar"/>
                </resources>
                <dependencies>
                    <module name="javax.api"/>
                </dependencies>
            </module>
        - copy the Derby JDBC driver derbyclient.jar into the directory (jar file is located in derby's directory)
        - add to standalone.xml definition of datasource and driver that this datasource is using
            <datasource jndi-name="java:/DerbyDS" pool-name="DerbyDS" enabled="true" use-ccm="false">
               <connection-url>jdbc:derby://localhost:1527/derbyDB;create=true</connection-url>
               <driver>org.apache.derby</driver>
               <security>
                    <user-name>demo</user-name>
                    <password>demo</password>
               </security>
               <validation>
                    <validate-on-match>false</validate-on-match>
                    <background-validation>false</background-validation>
               </validation>
               <statement>
                    <share-prepared-statements>false</share-prepared-statements>
               </statement>
            </datasource>
            <drivers>
               <driver name="org.apache.derby" module="org.apache.derby">
                   <xa-datasource-class>org.apache.derby.jdbc.ClientXADataSource</xa-datasource-class>
               </driver>
            </drivers>


- tips and tricks
    - you don't have to change facet for ejb and ear modules

- Project details
    - technology stack
        - eclipse oxygen
        - JBoss EAP 7.1.0 Beta (would need to pay in case of production use)
        - Java 8
        - Hibernate 5

- status
    - application structure is ready
    - user can download code from github, build it and create .ear file
    - ear is packed with ejb.jar and entities.jar

- todo
    - expose REST service
    - connect to Cassandra DB
    - check how I can manage my own transactions (commit + rollback)
        - is there any configuration in standalone.xml or in hibernate.cfg.xml?
    - logging framework
    - implement mail server
    - callbacks
    - interceptors
    - timers
    - write GUI in JSF

